"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogLevelConverter = exports.LogRetentionConverter = void 0;
const aws_lambda_1 = require("aws-cdk-lib/aws-lambda");
const aws_logs_1 = require("aws-cdk-lib/aws-logs");
/**
 * Converts LogRetention to CDK types.
 */
class LogRetentionConverter {
    toCDKRetentionDays = (retention) => {
        switch (retention) {
            case undefined:
                return undefined;
            case '1 day':
                return aws_logs_1.RetentionDays.ONE_DAY;
            case '3 days':
                return aws_logs_1.RetentionDays.THREE_DAYS;
            case '5 days':
                return aws_logs_1.RetentionDays.FIVE_DAYS;
            case '1 week':
                return aws_logs_1.RetentionDays.ONE_WEEK;
            case '2 weeks':
                return aws_logs_1.RetentionDays.TWO_WEEKS;
            case '1 month':
                return aws_logs_1.RetentionDays.ONE_MONTH;
            case '2 months':
                return aws_logs_1.RetentionDays.TWO_MONTHS;
            case '3 months':
                return aws_logs_1.RetentionDays.THREE_MONTHS;
            case '4 months':
                return aws_logs_1.RetentionDays.FOUR_MONTHS;
            case '5 months':
                return aws_logs_1.RetentionDays.FIVE_MONTHS;
            case '6 months':
                return aws_logs_1.RetentionDays.SIX_MONTHS;
            case '1 year':
                return aws_logs_1.RetentionDays.ONE_YEAR;
            case '13 months':
                return aws_logs_1.RetentionDays.THIRTEEN_MONTHS;
            case '18 months':
                return aws_logs_1.RetentionDays.EIGHTEEN_MONTHS;
            case '2 years':
                return aws_logs_1.RetentionDays.TWO_YEARS;
            case '3 years':
                return aws_logs_1.RetentionDays.THREE_YEARS;
            case '5 years':
                return aws_logs_1.RetentionDays.FIVE_YEARS;
            case '6 years':
                return aws_logs_1.RetentionDays.SIX_YEARS;
            case '7 years':
                return aws_logs_1.RetentionDays.SEVEN_YEARS;
            case '8 years':
                return aws_logs_1.RetentionDays.EIGHT_YEARS;
            case '9 years':
                return aws_logs_1.RetentionDays.NINE_YEARS;
            case '10 years':
                return aws_logs_1.RetentionDays.TEN_YEARS;
            case 'infinite':
                return aws_logs_1.RetentionDays.INFINITE;
        }
    };
}
exports.LogRetentionConverter = LogRetentionConverter;
/**
 * Converts LogLevel to CDK types.
 */
class LogLevelConverter {
    toCDKLambdaApplicationLogLevel = (logLevel) => {
        switch (logLevel) {
            case undefined: {
                return undefined;
            }
            case 'info': {
                return aws_lambda_1.ApplicationLogLevel.INFO;
            }
            case 'debug': {
                return aws_lambda_1.ApplicationLogLevel.DEBUG;
            }
            case 'warn': {
                return aws_lambda_1.ApplicationLogLevel.WARN;
            }
            case 'error': {
                return aws_lambda_1.ApplicationLogLevel.ERROR;
            }
            case 'fatal': {
                return aws_lambda_1.ApplicationLogLevel.FATAL;
            }
            case 'trace': {
                return aws_lambda_1.ApplicationLogLevel.TRACE;
            }
        }
    };
}
exports.LogLevelConverter = LogLevelConverter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bV9jb252ZXJ0ZXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nkay9lbnVtX2NvbnZlcnRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdURBQTZEO0FBQzdELG1EQUFxRDtBQUVyRDs7R0FFRztBQUNILE1BQWEscUJBQXFCO0lBQ2hDLGtCQUFrQixHQUFHLENBQ25CLFNBQW1DLEVBQ1IsRUFBRTtRQUM3QixRQUFRLFNBQVMsRUFBRTtZQUNqQixLQUFLLFNBQVM7Z0JBQ1osT0FBTyxTQUFTLENBQUM7WUFFbkIsS0FBSyxPQUFPO2dCQUNWLE9BQU8sd0JBQWEsQ0FBQyxPQUFPLENBQUM7WUFDL0IsS0FBSyxRQUFRO2dCQUNYLE9BQU8sd0JBQWEsQ0FBQyxVQUFVLENBQUM7WUFDbEMsS0FBSyxRQUFRO2dCQUNYLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxRQUFRO2dCQUNYLE9BQU8sd0JBQWEsQ0FBQyxRQUFRLENBQUM7WUFDaEMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxVQUFVLENBQUM7WUFDbEMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxZQUFZLENBQUM7WUFDcEMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxXQUFXLENBQUM7WUFDbkMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxXQUFXLENBQUM7WUFDbkMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxVQUFVLENBQUM7WUFDbEMsS0FBSyxRQUFRO2dCQUNYLE9BQU8sd0JBQWEsQ0FBQyxRQUFRLENBQUM7WUFDaEMsS0FBSyxXQUFXO2dCQUNkLE9BQU8sd0JBQWEsQ0FBQyxlQUFlLENBQUM7WUFDdkMsS0FBSyxXQUFXO2dCQUNkLE9BQU8sd0JBQWEsQ0FBQyxlQUFlLENBQUM7WUFDdkMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxXQUFXLENBQUM7WUFDbkMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxVQUFVLENBQUM7WUFDbEMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxXQUFXLENBQUM7WUFDbkMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxXQUFXLENBQUM7WUFDbkMsS0FBSyxTQUFTO2dCQUNaLE9BQU8sd0JBQWEsQ0FBQyxVQUFVLENBQUM7WUFDbEMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxTQUFTLENBQUM7WUFDakMsS0FBSyxVQUFVO2dCQUNiLE9BQU8sd0JBQWEsQ0FBQyxRQUFRLENBQUM7U0FDakM7SUFDSCxDQUFDLENBQUM7Q0FDSDtBQXhERCxzREF3REM7QUFFRDs7R0FFRztBQUNILE1BQWEsaUJBQWlCO0lBQzVCLDhCQUE4QixHQUFHLENBQy9CLFFBQThCLEVBQ0csRUFBRTtRQUNuQyxRQUFRLFFBQVEsRUFBRTtZQUNoQixLQUFLLFNBQVMsQ0FBQyxDQUFDO2dCQUNkLE9BQU8sU0FBUyxDQUFDO2FBQ2xCO1lBQ0QsS0FBSyxNQUFNLENBQUMsQ0FBQztnQkFDWCxPQUFPLGdDQUFtQixDQUFDLElBQUksQ0FBQzthQUNqQztZQUNELEtBQUssT0FBTyxDQUFDLENBQUM7Z0JBQ1osT0FBTyxnQ0FBbUIsQ0FBQyxLQUFLLENBQUM7YUFDbEM7WUFDRCxLQUFLLE1BQU0sQ0FBQyxDQUFDO2dCQUNYLE9BQU8sZ0NBQW1CLENBQUMsSUFBSSxDQUFDO2FBQ2pDO1lBQ0QsS0FBSyxPQUFPLENBQUMsQ0FBQztnQkFDWixPQUFPLGdDQUFtQixDQUFDLEtBQUssQ0FBQzthQUNsQztZQUNELEtBQUssT0FBTyxDQUFDLENBQUM7Z0JBQ1osT0FBTyxnQ0FBbUIsQ0FBQyxLQUFLLENBQUM7YUFDbEM7WUFDRCxLQUFLLE9BQU8sQ0FBQyxDQUFDO2dCQUNaLE9BQU8sZ0NBQW1CLENBQUMsS0FBSyxDQUFDO2FBQ2xDO1NBQ0Y7SUFDSCxDQUFDLENBQUM7Q0FDSDtBQTVCRCw4Q0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2dMZXZlbCwgTG9nUmV0ZW50aW9uIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L3BsdWdpbi10eXBlcyc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvbkxvZ0xldmVsIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWxhbWJkYSc7XG5pbXBvcnQgeyBSZXRlbnRpb25EYXlzIH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWxvZ3MnO1xuXG4vKipcbiAqIENvbnZlcnRzIExvZ1JldGVudGlvbiB0byBDREsgdHlwZXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBMb2dSZXRlbnRpb25Db252ZXJ0ZXIge1xuICB0b0NES1JldGVudGlvbkRheXMgPSAoXG4gICAgcmV0ZW50aW9uOiBMb2dSZXRlbnRpb24gfCB1bmRlZmluZWRcbiAgKTogUmV0ZW50aW9uRGF5cyB8IHVuZGVmaW5lZCA9PiB7XG4gICAgc3dpdGNoIChyZXRlbnRpb24pIHtcbiAgICAgIGNhc2UgdW5kZWZpbmVkOlxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICBjYXNlICcxIGRheSc6XG4gICAgICAgIHJldHVybiBSZXRlbnRpb25EYXlzLk9ORV9EQVk7XG4gICAgICBjYXNlICczIGRheXMnOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5USFJFRV9EQVlTO1xuICAgICAgY2FzZSAnNSBkYXlzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuRklWRV9EQVlTO1xuICAgICAgY2FzZSAnMSB3ZWVrJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuT05FX1dFRUs7XG4gICAgICBjYXNlICcyIHdlZWtzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuVFdPX1dFRUtTO1xuICAgICAgY2FzZSAnMSBtb250aCc6XG4gICAgICAgIHJldHVybiBSZXRlbnRpb25EYXlzLk9ORV9NT05USDtcbiAgICAgIGNhc2UgJzIgbW9udGhzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuVFdPX01PTlRIUztcbiAgICAgIGNhc2UgJzMgbW9udGhzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuVEhSRUVfTU9OVEhTO1xuICAgICAgY2FzZSAnNCBtb250aHMnOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5GT1VSX01PTlRIUztcbiAgICAgIGNhc2UgJzUgbW9udGhzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuRklWRV9NT05USFM7XG4gICAgICBjYXNlICc2IG1vbnRocyc6XG4gICAgICAgIHJldHVybiBSZXRlbnRpb25EYXlzLlNJWF9NT05USFM7XG4gICAgICBjYXNlICcxIHllYXInOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5PTkVfWUVBUjtcbiAgICAgIGNhc2UgJzEzIG1vbnRocyc6XG4gICAgICAgIHJldHVybiBSZXRlbnRpb25EYXlzLlRISVJURUVOX01PTlRIUztcbiAgICAgIGNhc2UgJzE4IG1vbnRocyc6XG4gICAgICAgIHJldHVybiBSZXRlbnRpb25EYXlzLkVJR0hURUVOX01PTlRIUztcbiAgICAgIGNhc2UgJzIgeWVhcnMnOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5UV09fWUVBUlM7XG4gICAgICBjYXNlICczIHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuVEhSRUVfWUVBUlM7XG4gICAgICBjYXNlICc1IHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuRklWRV9ZRUFSUztcbiAgICAgIGNhc2UgJzYgeWVhcnMnOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5TSVhfWUVBUlM7XG4gICAgICBjYXNlICc3IHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuU0VWRU5fWUVBUlM7XG4gICAgICBjYXNlICc4IHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuRUlHSFRfWUVBUlM7XG4gICAgICBjYXNlICc5IHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuTklORV9ZRUFSUztcbiAgICAgIGNhc2UgJzEwIHllYXJzJzpcbiAgICAgICAgcmV0dXJuIFJldGVudGlvbkRheXMuVEVOX1lFQVJTO1xuICAgICAgY2FzZSAnaW5maW5pdGUnOlxuICAgICAgICByZXR1cm4gUmV0ZW50aW9uRGF5cy5JTkZJTklURTtcbiAgICB9XG4gIH07XG59XG5cbi8qKlxuICogQ29udmVydHMgTG9nTGV2ZWwgdG8gQ0RLIHR5cGVzLlxuICovXG5leHBvcnQgY2xhc3MgTG9nTGV2ZWxDb252ZXJ0ZXIge1xuICB0b0NES0xhbWJkYUFwcGxpY2F0aW9uTG9nTGV2ZWwgPSAoXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsIHwgdW5kZWZpbmVkXG4gICk6IEFwcGxpY2F0aW9uTG9nTGV2ZWwgfCB1bmRlZmluZWQgPT4ge1xuICAgIHN3aXRjaCAobG9nTGV2ZWwpIHtcbiAgICAgIGNhc2UgdW5kZWZpbmVkOiB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICBjYXNlICdpbmZvJzoge1xuICAgICAgICByZXR1cm4gQXBwbGljYXRpb25Mb2dMZXZlbC5JTkZPO1xuICAgICAgfVxuICAgICAgY2FzZSAnZGVidWcnOiB7XG4gICAgICAgIHJldHVybiBBcHBsaWNhdGlvbkxvZ0xldmVsLkRFQlVHO1xuICAgICAgfVxuICAgICAgY2FzZSAnd2Fybic6IHtcbiAgICAgICAgcmV0dXJuIEFwcGxpY2F0aW9uTG9nTGV2ZWwuV0FSTjtcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2Vycm9yJzoge1xuICAgICAgICByZXR1cm4gQXBwbGljYXRpb25Mb2dMZXZlbC5FUlJPUjtcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2ZhdGFsJzoge1xuICAgICAgICByZXR1cm4gQXBwbGljYXRpb25Mb2dMZXZlbC5GQVRBTDtcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3RyYWNlJzoge1xuICAgICAgICByZXR1cm4gQXBwbGljYXRpb25Mb2dMZXZlbC5UUkFDRTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59XG4iXX0=