import { LogLevel } from '../printer/printer.js';
import { execa as _execa } from 'execa';
import { printer } from '../printer.js';
/**
 * Abstracts the execution of a command and pipes outputs/errors to `Printer.debug`
 */
export const executeWithDebugLogger = (cwd, executable, args, execa = _execa, options) => {
    try {
        const childProcess = execa(executable, args, {
            stdin: 'inherit',
            cwd,
            ...options,
        });
        childProcess?.stdout?.on('data', (data) => printer.log(data, LogLevel.DEBUG));
        childProcess?.stderr?.on('data', (data) => printer.log(data, LogLevel.DEBUG));
        return childProcess;
    }
    catch {
        throw new Error(`\`${executable}${args ? ' ' + args.join(' ') : ''}\` did not exit successfully. Rerun with --debug for more information.`);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhlY3V0ZV93aXRoX2RlYnVnZ2VyX2xvZ2dlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYWNrYWdlLW1hbmFnZXItY29udHJvbGxlci9leGVjdXRlX3dpdGhfZGVidWdnZXJfbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQWUsS0FBSyxJQUFJLE1BQU0sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3hDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FDcEMsR0FBVyxFQUNYLFVBQWtCLEVBQ2xCLElBQXlCLEVBQ3pCLEtBQUssR0FBRyxNQUFNLEVBQ2QsT0FBc0IsRUFDRyxFQUFFO0lBQzNCLElBQUk7UUFDRixNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRTtZQUMzQyxLQUFLLEVBQUUsU0FBUztZQUNoQixHQUFHO1lBQ0gsR0FBRyxPQUFPO1NBQ1gsQ0FBQyxDQUFDO1FBRUgsWUFBWSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBWSxFQUFFLEVBQUUsQ0FDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUNsQyxDQUFDO1FBQ0YsWUFBWSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBWSxFQUFFLEVBQUUsQ0FDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUNsQyxDQUFDO1FBRUYsT0FBTyxZQUFZLENBQUM7S0FDckI7SUFBQyxNQUFNO1FBQ04sTUFBTSxJQUFJLEtBQUssQ0FDYixLQUFLLFVBQVUsR0FDYixJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNoQyx3RUFBd0UsQ0FDekUsQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9nTGV2ZWwgfSBmcm9tICcuLi9wcmludGVyL3ByaW50ZXIuanMnO1xuaW1wb3J0IHsgRXhlY2FNZXRob2QsIGV4ZWNhIGFzIF9leGVjYSB9IGZyb20gJ2V4ZWNhJztcbmltcG9ydCB7IHByaW50ZXIgfSBmcm9tICcuLi9wcmludGVyLmpzJztcbmltcG9ydCB7IEV4ZWNhT3B0aW9ucyB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9wbHVnaW4tdHlwZXMnO1xuXG4vKipcbiAqIEFic3RyYWN0cyB0aGUgZXhlY3V0aW9uIG9mIGEgY29tbWFuZCBhbmQgcGlwZXMgb3V0cHV0cy9lcnJvcnMgdG8gYFByaW50ZXIuZGVidWdgXG4gKi9cbmV4cG9ydCBjb25zdCBleGVjdXRlV2l0aERlYnVnTG9nZ2VyID0gKFxuICBjd2Q6IHN0cmluZyxcbiAgZXhlY3V0YWJsZTogc3RyaW5nLFxuICBhcmdzPzogUmVhZG9ubHk8c3RyaW5nW10+LFxuICBleGVjYSA9IF9leGVjYSxcbiAgb3B0aW9ucz86IEV4ZWNhT3B0aW9uc1xuKTogUmV0dXJuVHlwZTxFeGVjYU1ldGhvZD4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNoaWxkUHJvY2VzcyA9IGV4ZWNhKGV4ZWN1dGFibGUsIGFyZ3MsIHtcbiAgICAgIHN0ZGluOiAnaW5oZXJpdCcsXG4gICAgICBjd2QsXG4gICAgICAuLi5vcHRpb25zLFxuICAgIH0pO1xuXG4gICAgY2hpbGRQcm9jZXNzPy5zdGRvdXQ/Lm9uKCdkYXRhJywgKGRhdGE6IHN0cmluZykgPT5cbiAgICAgIHByaW50ZXIubG9nKGRhdGEsIExvZ0xldmVsLkRFQlVHKVxuICAgICk7XG4gICAgY2hpbGRQcm9jZXNzPy5zdGRlcnI/Lm9uKCdkYXRhJywgKGRhdGE6IHN0cmluZykgPT5cbiAgICAgIHByaW50ZXIubG9nKGRhdGEsIExvZ0xldmVsLkRFQlVHKVxuICAgICk7XG5cbiAgICByZXR1cm4gY2hpbGRQcm9jZXNzO1xuICB9IGNhdGNoIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgXFxgJHtleGVjdXRhYmxlfSR7XG4gICAgICAgIGFyZ3MgPyAnICcgKyBhcmdzLmpvaW4oJyAnKSA6ICcnXG4gICAgICB9XFxgIGRpZCBub3QgZXhpdCBzdWNjZXNzZnVsbHkuIFJlcnVuIHdpdGggLS1kZWJ1ZyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5gXG4gICAgKTtcbiAgfVxufTtcbiJdfQ==